#!/usr/bin/env python
# coding: utf-8

# In[1]:


import pandas as pd
import numpy as np
import matplotlib.pyplot as plt


# In[2]:


dataset = pd.read_csv('casestudy.csv')


# In[3]:


dataset.head()


# In[4]:


dataset.dtypes


# In[5]:


#checking for null values
dataset.isnull().any()


# In[6]:


#number of records in the dataset
len(dataset)


# In[7]:


#get the unique number of years 
np.unique(dataset['year'])


# In[8]:


current_year = 2017
previous_year = 2016


# # Total renvenue of the current year

# In[9]:


total_revenue_curr_year = dataset.loc[dataset['year']==current_year, 'net_revenue'].sum()
total_revenue_curr_year


# # New Customer Revenue

# In[10]:


#new customer revenue can be calculated by first getting a df for the new customers and then summing up 
#the net revenue

curr_year_customers_df = dataset.loc[dataset['year']==current_year]
prev_year_customers_df = dataset.loc[dataset['year']==previous_year]


# In[11]:


len(curr_year_customers_df)


# In[12]:


len(prev_year_customers_df)


# In[13]:


#there are total 229,028 new customers 

new_customer_df = curr_year_customers_df[~curr_year_customers_df['customer_email'].isin(prev_year_customers_df['customer_email'])]
len(new_customer_df)


# In[14]:


total_new_customer_revenue = new_customer_df['net_revenue'].sum()
total_new_customer_revenue


# # Existing Customer Growth

# In[15]:


#getting dfs for existing customers for current year and existing customers of previous years and then taking
# the difference of the summed up net revenue

curr_existing_df = curr_year_customers_df[curr_year_customers_df['customer_email'].isin(prev_year_customers_df['customer_email'])] 
previous_existing_df =  prev_year_customers_df[prev_year_customers_df['customer_email'].isin(curr_year_customers_df['customer_email'])]


# In[16]:


existing_customer_growth = curr_existing_df['net_revenue'].sum() -  previous_existing_df['net_revenue'].sum()
existing_customer_growth


# # Revenue lost from Attrition

# In[17]:


#there are 183,687 customers who left (were there in 2016 but not in 2017)

customers_who_left_df = prev_year_customers_df[~prev_year_customers_df['customer_email'].isin(curr_year_customers_df['customer_email'])]
len(customers_who_left_df)


# In[18]:


revenue_lost_from_attrition = customers_who_left_df['net_revenue'].sum()
revenue_lost_from_attrition


# # Existing customer Revenue current year

# In[19]:


curr_existing_revenue = curr_existing_df['net_revenue'].sum()
curr_existing_revenue


# # Existing Customer Revenue Prior Year

# In[20]:


prev_existing_revenue = previous_existing_df['net_revenue'].sum()
prev_existing_revenue


# # Total Customers current year

# In[21]:


total_customers_curr = len(curr_year_customers_df['customer_email'])
total_customers_curr


# # Total Customers Previous year

# In[22]:


total_customers_prev = len(prev_year_customers_df['customer_email'])
total_customers_prev


# # New customers

# In[23]:


new_customers_df = curr_year_customers_df[~curr_year_customers_df['customer_email'].isin(prev_year_customers_df['customer_email'])]
new_customers_df.head()


# In[24]:


len(new_customers_df)


# # Lost Customers

# In[25]:


lost_customers_df = prev_year_customers_df[~prev_year_customers_df['customer_email'].isin(curr_year_customers_df['customer_email'])]
lost_customers_df.head()


# In[26]:


len(lost_customers_df)


# # Visualizations

# ### I) Revenue generated per year

# In[49]:


prevprev_year_customers_df = dataset.loc[dataset['year']==2015]
year1 = prevprev_year_customers_df['net_revenue'].sum()

#year1 = dataset.loc[dataset['year']==2015, 'net_revenue'].sum()

year2 = prev_year_customers_df['net_revenue'].sum()

year3 = curr_year_customers_df['net_revenue'].sum()


# In[40]:


years = ['2015', '2016', '2017']
revenue = []
revenue.append(year1)
revenue.append(year2)
revenue.append(year3)

revenue


# In[88]:


plt.plot(years, revenue)
 
plt.xlabel('Years')
plt.ylabel('Revenue generated')
plt.ylim([25000000, 35000000])
plt.title('Revenue generated per year')
 
plt.show()


# In[44]:


avgyear1 = year1/len(prevprev_year_customers_df['customer_email'])
avgyear2 = year2/len(prev_year_customers_df['customer_email'])
avgyear3 = year3/len(curr_year_customers_df['customer_email'])

avg_revenue = []
avg_revenue.append(avgyear1)
avg_revenue.append(avgyear2)
avg_revenue.append(avgyear3)

avg_revenue


# ##### Observation 1
# ##### It seems like the total revenue generated by the retailer had dropped in the year 2016 but it increased significantly in the year 2017. The average revenue generated is similar among all the three years. That means that this drop in 2016 or increase in 2017 was not because of the number of customers.

# ### II) Total customers per year

# In[54]:


total_customers_curr
total_customers_prev
total_customers_prevprev = len(prevprev_year_customers_df['customer_email'])

customers = []
customers.append(total_customers_curr)
customers.append(total_customers_prev)
customers.append(total_customers_prevprev)


# In[83]:


fig = plt.figure(figsize = (10, 5))
 
# creating the bar plot
plt.bar(years, customers, color ='orange',
        width = 0.4)
 
plt.xlabel("Year")
plt.ylabel("No. of customers")
plt.title("Total customers per year")
plt.show()


# ##### Observation 2:
# ##### The company seems to have the minimum number of customers in the year 2016. This might be because a lot of customers from 2015 might have left the company and there were very few new customers. Let's find out if this is the case from the graph below.

# ### III) Why exactly did 2016 have less customers?

# In[65]:


new_customers_curr_df = curr_year_customers_df[~curr_year_customers_df['customer_email'].isin(prev_year_customers_df['customer_email'])]
new_customers_prev_df = prev_year_customers_df[~prev_year_customers_df['customer_email'].isin(prevprev_year_customers_df['customer_email'])]

new_customers = []
new_customers.append(len(new_customers_curr_df))
new_customers.append(len(new_customers_prev_df))
new_customers


# In[66]:


lost_customers_curr_df = prev_year_customers_df[~prev_year_customers_df['customer_email'].isin(curr_year_customers_df['customer_email'])]
lost_customers_prev_df = prevprev_year_customers_df[~prevprev_year_customers_df['customer_email'].isin(prev_year_customers_df['customer_email'])]

lost_customers = []
lost_customers.append(len(lost_customers_curr_df))
lost_customers.append(len(lost_customers_prev_df))
lost_customers


# In[67]:


#total customers
customers


# In[69]:


years1 = ['2017', '2016']


# In[78]:


X_axis = np.arange(len(years1))
  
plt.bar(X_axis - 0.2, new_customers, 0.4, label = 'New Customers', color='orange')
plt.bar(X_axis + 0.2, lost_customers, 0.4, label = 'Lost Customers', color='grey')
  
plt.xticks(X_axis, years1)
plt.xlabel("Year")
plt.ylabel("Number of Customers")
plt.title("Number of new and lost customers per year")
plt.legend()
plt.show()


# ##### Observation 3:
# ##### As we can see from the graph, the number of customers who left the company in 2016 were in fact more than the new customers who joined the company. As we can see, even though number of customers who left the company is similar for 2016 and 2017, the number of new customers joining the company in 2017 was way more.
# ##### Maybe 2016 was just a rough year for the company in regards to the total revenue and customers, but we can't say this for sure with the limited number of years for which the data is  provided.

# In[ ]:




